#set($schemeSelectedUrl=$link.setRelative('/content/scheme/select.vm'))
#set($getMouldUrl=$link.setRelative('/MouldAction/getMould.json'))
#set($adminsUrl=$link.setRelative('/AdminAction/findAll.json'))
#set($swfLocation=$link.setRelative('/content/fileupload/swfupload/swfupload.swf'))
#set($tempBmpUrl=$link.setRelative('SchemeAction/downTempImg.do'))
#set($uploadUrl=$link.setRelative('/SchemeAction/mapUpload.json'))
#set($getBmpUrl=$link.setRelative('/SchemeAction/downImg.do'))
#set($productTypeUrl=$link.setRelative('/DataDictAction/findDictList.json?code=productType'))
#set($user=$session.getAttribute("user"))
#set($findAssociationUrl=$link.setRelative('/CommonAction/findAllAssociation.json'))
#set($saveMouldWidthFlowURL=$link.setRelative('/MouldAction/saveMouldWidthFlow.json'))
#set($generateCodeUrl=$link.setRelative('/MouldAction/generateCode.json'))
#set($getSchemeInfoByTaskUrl=$link.setRelative('/SchemeAction/getSchemeInfoByTask.json'))
#set($mouldSizeSelectedVm=$link.setRelative('/content/mould/mouldSizeSelected.vm'))

<form id="form1" method="post">
    <div class="mini-tabs" style="width:100%;height:320px" activeIndex="0">
        <div title="模具信息">
            <table style="table-layout:fixed;">
                <tr>
                    <td style="width:90px;">模具编码：</td>
                    <td style="width:150px;">
                        <input name="code" id="code" class="mini-textbox" required="true" readonly="true"  />
                    </td>
                    <td style="width:90px;">模具规格：</td>
                    <td style="width:150px;">
                        <input id="mouldsizeSelector" name="mouldSize.dbId" required="true" class="mini-buttonedit" showClose="true" oncloseclick="onCloseClick" onbuttonclick="onMouldSizeSlecte" name="mouldSize.dbId" textName="mouldSize.size"/>
                    </td>
                </tr>
                <tr>
                    <td>模具类型</td>
                    <td>
                        <input id="mouldType" name="mouldSize.mouldType.name" readonly="true"  class="mini-textbox" />
                    </td>

                    <td class="form-label">下单日期：</td>
                    <td>
                        <input id="manuDate" name="manuDate" format="yyyy-MM-dd" readonly="true" class="mini-datepicker"  />
                    </td>
                </tr>
                <tr>
                    <td style="width:90px;">包产吨位(公斤)：</td>
                    <td style="width:150px;">
                        <input name="mouldSize.bcdw" id="bcdw" readonly="true"  class="mini-textbox" />
                    </td>
                    <td style="width:90px;">交货日期</td>
                    <td style="width:150px;">
                        <input id="deadline" name="deadline" format="yyyy-MM-dd" required="true" class="mini-datepicker" ondrawdate="onDrawDate"  />
                    </td>
                </tr>

                <tr>
                    <td>模具单价：</td>
                    <td style="width:150px;">
                        <input name="mouldSize.price" id="price" readonly="true"  class="mini-textbox" />
                    </td>
                    <td class="form-label">模具状态：</td>
                    <td >
                    ##0:定制1.试模 2.返修,3.可配半键报废,4判定 5,彻底报废6,氮化,7,待产,8生产
                        <input name="status" class="mini-combobox" value="0" readonly="true"
                               data="[{id:0,text:'定制'}, {id:1, text: '试模'}, {id:2, text: '返修'},
                               {id:3, text: '可配半键报废'}, {id:4, text: '判定'}, {id:5, text: '彻底报废'}
                               , {id:6, text: '氮化'}, {id:7, text: '待产'}, {id:8, text: '生产'}]"/>
                    </td>
                </tr>
                <tr>

                    <td>外协公司：</td>
                    <td>
                        <input name="manufacture.dbId" required="true" property="editor" class="mini-combobox"   url="$findAssociationUrl"
                               textField="name" valueField="dbId" onvaluechanged="onWaiXieChanged" />
                    </td>
                    <td>外协负责人：</td>
                    <td >
                        <input name="manufacture.agent.name" id="agentName" readonly="true"  class="mini-textbox" />
                    </td>

                </tr>
                <tr>
                    <td>图纸</td>
                    <td>
                        <input id="schemeSelector" showClose="true" oncloseclick="onCloseClick" required="true" class="mini-buttonedit" name="scheme.dbId" textName="scheme.name"/>
                    </td>
                    <td rowspan="4">
                        <img id="bmp" height="100%" />
                    </td>
                </tr>
                <tr>
                    <td>编码：</td>
                    <td><input id="schemeCode" readonly="true" name="scheme.code" class="mini-textbox" /></td>
                </tr>
                <tr>
                    <td>设计人：</td>
                    <td><input id="schemeDesigner" readonly="true" name="scheme.designer.name" class="mini-textbox" /></td>
                </tr>
                <tr>
                    <td>设计日期：</td>
                    <td><input id="schemeDate" readonly="true" name="scheme.designDate" class="mini-textbox" /></td>
                </tr>
            </table>
        </div>
        <div title="备注">
            <input id="textarea1" style="width: 100%;height: 100%" emptyText="备注信息" name="mcomment" class="mini-textarea" />
        </div>
    </div>
    <div style="text-align:center;padding:10px;">
        <a class="mini-button" onclick="onOk" style="width:60px;margin-right:20px;">确定</a>
        <a class="mini-button" onclick="onCancel" style="width:60px;">取消</a>
    </div>
</form>


<script type="text/javascript">
    var operateName;
    mini.parse();
    var manuDate = mini.get("manuDate");
    var deadline = mini.get("deadline");
    manuDate.setValue(new Date());
    var originalData;
    var form = new mini.Form("form1");

    function onWaiXieChanged(e){
        if(e.selected.agent){
            mini.get("agentName").setValue(e.selected.agent.name);
        }
    }


    function onDrawDate(e) {
        var date = e.date;
        var d = new Date();

        if (date.getTime() < d.getTime()) {
            e.allowSelect = false;
        }
    }


    function saveData() {
        form.validate();
        if (form.isValid() == false) return;
        var o = form.getData();
        var dataAfterEdit = $.extend({},originalData,o);
        dataAfterEdit.manuDate=manuDate.getText()==""?null:manuDate.getText();
        $.ajax({
            url: "${saveMouldWidthFlowURL}",
            data: {
                    mouldData:mini.encode(dataAfterEdit),
                    taskId:taskId
                  },
            cache: false,
            success: function (text) {
                CloseWindow("save");
            },
            error: function (jqXHR, textStatus, errorThrown) {
                mini.alert(jqXHR.responseText);
            }
        });
    }


    ////////////////////
    //标准方法接口定义
    function setData(taskIdParm,openWindow) {
        openWindow.setWidth(560);
        openWindow.setHeight(400);
        taskId = mini.clone(taskIdParm);
        $.ajax({
            url: "${getSchemeInfoByTaskUrl}",
            data:{taskId:taskId},
            cache: false,
            success: function (scheme) {
                if (scheme) {
                    mini.get("schemeSelector").setValue(scheme.dbId);
                    mini.get("schemeSelector").setText(scheme.name);
                    $("#bmp").attr("src","${getBmpUrl}?schemeId="+ scheme.dbId);
                    mini.get("schemeCode").setValue(scheme.code);
                    mini.get("schemeDate").setValue(scheme.designDate);
                    mini.get("schemeDesigner").setValue(scheme.designer.name);
                    $.ajax({
                        url: "${generateCodeUrl}?schemeId=" + scheme.dbId,
                        cache: false,
                        success: function (code) {
                            mini.get("code").setValue(code);
                        }
                    });
                }
            }
        });
    }

    function onMouldSizeSlecte(){
        mini.open({
            url: "$mouldSizeSelectedVm",
            title: "选择模具规格",
            width: 700,
            height: 400,
            ondestroy: function (action) {
                //if (action == "close") return false;
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var mouldSize = iframe.contentWindow.GetData();
                    mouldSize = mini.clone(mouldSize);    //必须
                    if (mouldSize) {
                        mini.get("mouldsizeSelector").setValue(mouldSize.dbId);
                        mini.get("mouldsizeSelector").setText(mouldSize.size);
                        if(mouldSize.mouldType)
                            mini.get("mouldType").setValue(mouldSize.mouldType.name);
                        mini.get("price").setValue(mouldSize.price);
                        mini.get("bcdw").setValue(mouldSize.bcdw);
                    }
                }

            }
        });
    }

    function getData() {
        var o = form.getData();
        return o;
    }
    function CloseWindow(action) {
        if (action == "close" && form.isChanged()) {
            if (confirm("数据被修改了，是否先保存？")) {
                return false;
            }
        }
        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
        else window.close();
    }

    function onOk(e) {
        saveData();
    }
    function onCancel(e) {
        CloseWindow("cancel");
    }

    function onCloseClick(e) {
        e.sender.setValue("");
        e.sender.setText("");
    }


</script>