#set($loadOrderURL=$link.setRelative('/BussinessAction/loadOrderForm.json'))
#set($loadOrderDeatilURL=$link.setRelative('/BussinessAction/getOrderDetail.json'))
#set($findCityUrl=$link.setRelative('/CommonAction/findAllCity.json'))
#set($editVm=$link.setRelative('/content/order/edit.vm'))
#set($productPanelVm=$link.setRelative('/content/product/list.vm'))
#set($deleteOrderURL=$link.setRelative('/BussinessAction/deleteOrder.json'))
#set($findTeamUrl=$link.setRelative('/CommonAction/findAllTeam.json'))
#set($paiChanUrl=$link.setRelative('/BussinessAction/paiChan.json'))
#set($stopOrderFlow=$link.setRelative('/BussinessAction/stopOrderFlow.json'))
#set($flowImgVm=$link.setRelative('/content/flow/flowImg.vm'))
#set($clientSelectedUrl=$link.setRelative('/content/dict/clientSelecte.vm'))
#set($findTeamUrl=$link.setRelative('/CommonAction/findAllTeamDetail.json'))
#set($schemeSelectedUrl=$link.setRelative('/content/scheme/select.vm'))



<script src="$link.setRelative('scripts/dateUtils.js')" type="text/javascript"></script>

<style type="text/css">
    body{
        margin:0;padding:0;border:0;width:100%;height:100%;overflow:hidden;
    }
</style>
<body>
<div class="mini-splitter" style="width:100%;height:100%;">

<div showCollapseButton="true">

    <div class="mini-toolbar" style="padding:2px;border-top:0;border-left:0;border-right:0;">
        <form id="searchForm" method="post">
            <table style="width:100%;">
                <tr>
                    <td style="width:100%;">
                        #if($beanFactory.LookUp("adminService").havePower($user,"订单查看"))
                            <a class="mini-button" iconCls="icon-edit" plain="true" onclick="viewRow()">查看</a>
                        #end
                        <span class="separator"></span>
                        <div id="pager1" class="mini-pager" style="float: right"
                             sizeList="[10,20,50]">
                        </div>
                        <span class="separator"></span>

                    </td>
                </tr>
                <tr>
                    <td>
                        起始日期:
                        <input id="startDate" class="mini-datepicker" />
                        <span class="separator"></span>
                        截止日期:<input id="endDate" class="mini-datepicker" />
                        <span class="separator"></span>
                        所属客户:<input id="clientSelector"  required="true" class="mini-buttonedit" onbuttonclick="onClientSlecte" />
                    </td>
                    </td>
                </tr>
                <tr>
                    <td>
                        订单状态:<input id="compStatus"  allowInput="flase" showNullItem="true" nullItemText="选择订单状态..." class="mini-combobox"  data="[{id:0,text:'未完成'}, {id:1, text: '已完成'}]"/>
                        <span class="separator"></span>
                        订单编号:<input id="code" class="mini-textbox" emptyText="订单编号" onenter="search" />
                        <span class="separator"></span>
                         图纸编号:<input id="schemeSelector" required="true" class="mini-buttonedit" onbuttonclick="onSchemeSlecte" name="scheme.dbId" textName="scheme.name"/>
                        <a class="mini-button" plain="true" iconCls="icon-search" onclick="search()">查询</a>
                    </td>
                </tr>
            </table>
        </form>
    </div>
    <div class="mini-fit" >
        <div id="orderGrid" class="mini-datagrid" style="width:100%;height:70%;"
             borderStyle="border:0;" onselectionchanged="onOrderChanged"
             onrowdblclick="onRowDblClick" pager="#pager1" showFooter="false"
             url="$loadOrderURL" allowCellSelect="true"  >
            <div property="columns">
                <div field="code"  headerAlign="center" >订单编号
                </div>
                <div field="client.name"  headerAlign="center" >客户名
                </div>
                <div field="client.agent.name"  headerAlign="center" >业务员
                </div>
                <div field="scheme.name"  headerAlign="center" >图纸
                </div>
                <div field="registerDate"   dateFormat="yyyy-MM-dd">订货日期
                </div>
                <div field="compStatus"  headerAlign="center" renderer="onGenderRenderer" >是否完成
                </div>
            </div>
        </div>
        <div id="detailGrid" class="mini-datagrid" style="width:100%;height:30%;"
             url="$loadOrderDeatilURL"  idField="dbId"
             showFooter="false" pageSize="20"
                >
            <div property="columns">
                <div field="setSize"  headerAlign="center" >尺寸</div>
                <div field="orderWeight"  headerAlign="center" >订货重量</div>
                <div field="compWeight"  headerAlign="center" >完成重量</div>
                <div field="orderQuantity"  headerAlign="center" >订货数量</div>
                <div field="compQuantity"  headerAlign="center" >完成数量</div>
                <div field="compStatus"  headerAlign="center" >完成状态</div>
            </div>
        </div>
    </div>
</div>
<div size="240" showCollapseButton="true">
    <div class="mini-toolbar" style="padding:2px;border-top:0;border-left:0;border-right:0;">
        <a class="mini-button" iconCls="icon-remove" plain="true" onclick="onRemoveNode()">删除节点</a>
        </br>
        <span style="padding-left:5px;">选择机台：</span>
        <input name="productTeamId" id="productTeamId" property="editor" class="mini-combobox"   url="$findTeamUrl"
               textField="1" valueField="0"  required="true" ondrawcell="onDrawCell" />
        </br>
        #if($beanFactory.LookUp("adminService").havePower($user,"开启跟踪单"))
            <a class="mini-button" iconCls="icon-goto" plain="true" onclick="openOrderFlow()">确定</a>
        #end
    </div>
    <div class="mini-fit">
        <ul id="ordertree" class="mini-tree"  style="width:100%;"
            showTreeIcon="true" textField="code" idField="dbId" parentField="pid" resultAsTree="false"
                >
        </ul>
    </div>
</div>

<script type="text/javascript">
mini.parse();
var searchForm =new mini.Form("searchForm");
var adminGrid = mini.get("adminGrid");
var clientGrid = mini.get("clientGrid");
var orderGrid = mini.get("orderGrid");
var detailGrid = mini.get("detailGrid");
var startFlowWindow = mini.get("startFlowWindow");
var ordertree = mini.get("ordertree");
var productTeamId = mini.get("productTeamId");

function onDrawCell(e) {
    e.cellHtml = '<span style="color:red;">'+e.record[1]+'  '+e.record[2]+'</span>';
}

function onClientSlecte(e){
    mini.open({
        url: "$clientSelectedUrl",
        title: "选择客户",
        width: 800,
        height: 500,
        ondestroy: function (action) {
            //if (action == "close") return false;
            if (action == "ok") {
                var iframe = this.getIFrameEl();
                var client = iframe.contentWindow.GetData();
                client = mini.clone(client);    //必须
                if (client) {
                    mini.get("clientSelector").setValue(client.dbId);
                    mini.get("clientSelector").setText(client.name);
                }
            }

        }
    });
}

function isEmpty(s)
{
    return ((s == undefined || s == null || s == "") ? true : false);
}
function openOrderFlow(){
    var orderData = ordertree.getData();
    var productTeamId =  mini.get("productTeamId").getValue();
    if(isEmpty(productTeamId)){
        mini.alert("请选择机台");
        return;
    }
    var combineOrders ='';
    for(var a=0;a<orderData.length;a++){
        combineOrders +=orderData[a].dbId;
        if(a!=orderData.length-1)
            combineOrders +=","
    }
    if(isEmpty(combineOrders)){
        mini.alert("请选择需要合并的订单");
        return;
    }
    var paiChanRecordId;
    if(paichanRecordCopy){
        paiChanRecordId = paichanRecordCopy.dbId;
    }
    $.ajax({
        url: "$paiChanUrl",
        data: {
            code:combineOrders,
            productTeamId:productTeamId,
            type:'combine',
            paiChanRecordId:paiChanRecordId
        },
        success: function (text) {
            mini.alert('操作成功');
            CloseWindow("ok");
        },
        error: function (jqXHR, textStatus, errorThrown) {
            mini.alert(jqXHR.responseText);
        }
    });
}

function onCancel() {
    startFlowWindow.hide();
}

function onGenderRenderer(e) {
    return e.value==0?"未完成":"已完成";
}
function onGenderRenderer2(e) {
    return e.value==0?"开票":"不开票";
}
function viewRow() {
    var order = orderGrid.getSelected();
    if(order)
        mini.open({
            url: "$editVm",
            title: "查看订单", width: 530, height: 590,
            onload: function () {
                var iframe = this.getIFrameEl();
                iframe.contentWindow.setData("view",order);
            }
        });

}

function onOrderChanged(e){
    var grid = e.sender;
    var order = grid.getSelected();
    if (order) {
        detailGrid.load({orderId:order.dbId});
    }
}
var paichanRecordCopy;
function setData(paichanRecord) {
    if(paichanRecord){
        paichanRecordCopy = mini.clone(paichanRecord);
        productTeamId.setValue(paichanRecord.productTeamId);
        orderGrid.load({paiChanRecordId:paichanRecord.dbId});
    }else{
        orderGrid.load();
    }
    detailGrid.load();
}

function search() {
    var startDate = mini.get("startDate");
    var endDate = mini.get("endDate");
    var code = mini.get("code");
    var compStatus = mini.get("compStatus");
    var clientSelector = mini.get("clientSelector");
    var schemeSelector = mini.get("schemeSelector");
    var parm = {
        startDate:startDate.getText(),
        endDate:endDate.getText(),
        code:code.getValue(),
        compStatus:compStatus.getValue(),
        clientId:clientSelector.getValue(),
        schemeId:schemeSelector.getValue()
    };
    orderGrid.load(parm);
}

function onRowDblClick(e) {
    var order = orderGrid.getSelected();
    var treeData = ordertree.getData();
    for(var a=0;a<treeData.length;a++){
        if(treeData[a].dbId == order.dbId){
            mini.alert("无法重复添加订单");
            return;
        }
        if(order.scheme.dbId!=treeData[a].scheme.dbId){
            mini.alert("由于图纸不同，无法合并订单");
            return;
        }
    }
    ordertree.addNode(order, "after");
    if(mini.get("schemeSelector").getValue!=order.scheme.dbId){
        mini.get("schemeSelector").setValue(order.scheme.dbId);
        mini.get("schemeSelector").setText(order.scheme.name);
    search();
    }

}



/**
 * 离制定的时间较近（交货期不到两天和模具交期不到一天）的流程自动置顶（次优先）并显黄色字体，超过制定时间的流程自动置顶（最优先）并显红色字体。
 */
orderGrid.on("drawcell", function (e) {
    var record = e.record,
            column = e.column,
            field = e.field,
            value = e.value;

    var remainTime;
    var result = new Date().DateDiff('d',record.preSendDate);
    if(result>0&&result<=2){
        e.rowCls = "yellowrow";
    }
    if(result<=0){
        e.rowCls = "redrow";
    }

});

function onRemoveNode(e) {
    var node = ordertree.getSelectedNode();
    if (node) {
        ordertree.removeNode(node);
    }
}


function CloseWindow(action) {
    if (window.CloseOwnerWindow)
        return window.CloseOwnerWindow(action);
    else window.close();
}

function onSchemeSlecte(e){
    mini.open({
        url: "$schemeSelectedUrl",
        title: "选择列表",
        width: 800,
        height: 400,
        ondestroy: function (action) {
            //if (action == "close") return false;
            if (action == "ok") {
                var iframe = this.getIFrameEl();
                var scheme = iframe.contentWindow.GetData();
                scheme = mini.clone(scheme);    //必须
                if (scheme) {
                    mini.get("schemeSelector").setValue(scheme.dbId);
                    mini.get("schemeSelector").setText(scheme.name);
                }
            }else{
                mini.get("schemeSelector").setValue("");
                mini.get("schemeSelector").setText("");
            }

        }
    });
}
</script>

</body>