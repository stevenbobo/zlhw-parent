#set($loadAdminsURL=$link.setRelative('/AdminAction/findAdmins.json'))
#set($surfaceListUrl=$link.setRelative('/DataDictAction/findDictList.json?code=surface'))
#set($materialListUrl=$link.setRelative('/DataDictAction/findDictList.json?code=material'))
#set($productTypeUrl=$link.setRelative('/DataDictAction/findDictList.json?code=productType'))
#set($packListUrl=$link.setRelative('/DataDictAction/findDictList.json?code=pack'))
#set($user=$session.getAttribute("user"))
#set($findAssociationUrl=$link.setRelative('/CommonAction/findAllAssociation.json'))
#set($addUpdateOrderUrl=$link.setRelative('/BussinessAction/saveUpdateOrder.json'))
#set($getLastOrderFormUrl=$link.setRelative('/BussinessAction/getLastOrderForm.json'))

#set($generateCodeUrl=$link.setRelative('/MouldAction/generateCode.json'))
#set($loadOrderDeatilURL=$link.setRelative('/BussinessAction/getOrderDetail.json'))
#set($getOrderUrl=$link.setRelative('/BussinessAction/getOrder.json'))
#set($schemeSelectedUrl=$link.setRelative('/content/scheme/select.vm'))
#set($clientSelectedUrl=$link.setRelative('/content/dict/clientSelecte.vm'))
#set($citySelectedUrl=$link.setRelative('/content/dict/citySelecte.vm'))
#set($lvdingPriceSelectedUrl=$link.setRelative('/content/dict/lvdingPriceSelecte.vm'))
#set($generateCodeUrl=$link.setRelative('/BussinessAction/generateCode.json'))
#set($findLastLvDingUrl=$link.setRelative('/DataDictAction/findLastLvDing.json'))

<style type="text/css">
    html, body
    {
        font-size:12px;
        padding:0;
        margin:0;
        border:0;
        overflow:hidden;
    }
</style>
<body>
<form id="form1" method="post">
    <div  class="mini-tabs" style="width:100%;height:355px" activeIndex="0">
        <div title="订单信息">
            <table style="table-layout:fixed;">
                <tr>
                    <td style="width:110px;">订单编号：</td>
                    <td style="width:150px;">
                        <input name="code" id="code" readonly="true" class="mini-textbox" required="true"  />
                    </td>
                    <td style="width:110px;">所属客户：</td>
                    <td style="width:150px;">
                        <input id="clientSelector"  required="true" class="mini-buttonedit" onbuttonclick="onClientSlecte" name="client.dbId" textName="client.name"/>
                    </td>
                </tr>
                <tr>
                    <td>付款方式：</td>
                    <td>
                        <input name="payWay" required="true" class="mini-combobox"  data="[{id:0,text:'现金'}, {id:1, text: '月结'},{id:1, text: '特殊月结'}]"/>
                    </td>
                    <td>提货方式：</td>
                    <td>
                        <input name="pickWay" required="true" class="mini-combobox"   data="[{id:0,text:'送货上门'}, {id:1, text: '自提货'}]"/>
                    </td>


                </tr>
                <tr>
                    <td >送货地址：</td>
                    <td >
                        <input id="citySelector" allowInput="false" class="mini-buttonedit" onbuttonclick="onCitySlecte" name="city.dbId" textName="city.name"/>
                    </td>
                    <td class="form-label">详细地址：</td>
                    <td >
                        <input name="address" class="mini-textbox" />
                    </td>
                </tr>
                <tr>
                    <td>业务员　：</td>
                    <td>
                        <input name="client.agent.name" id="agentName" readonly="true" class="mini-textbox"  />
                    </td>

                    <td class="form-label">相关图纸：</td>
                    <td>
                        <input id="schemeSelector" required="true" class="mini-buttonedit" onbuttonclick="onSchemeSlecte" name="scheme.dbId" textName="scheme.name"/>
                    </td>
                </tr>
                <tr>
                    <td style="width:90px;">材料类型：</td>
                    <td style="width:150px;">
                        <input name="material.dbId" property="editor" required="true" class="mini-combobox"   url="$materialListUrl"
                               textField="name" valueField="dbId" value="401" ondrawcell="onDrawWithDbId" />
                    </td>
                    <td>米量(克/米)：</td>
                    <td style="width:150px;">
                        <input id="kpm" name="kpm" class="mini-spinner" minValue="1" maxValue="100000000" value="1" required="true"/>
                    </td>

                </tr>
                <tr>

                    <td>材料硬度</td>
                    <td>
                        <input name="hardness" class="mini-textbox" required="true"/>
                    </td>
                    <td>是否时效</td>
                    <td>
                        <input  name="shixiao" required="true" class="mini-combobox" value="1"  data="[{id:0,text:'不需要'}, {id:1, text: '需要'}]"/>
                    </td>
                </tr>
                <tr>

                    <td>表面处理</td>
                    <td>
                        <input name="surfaceProcess.dbId" property="editor" class="mini-combobox"  required="true"  url="$surfaceListUrl"
                               textField="name" valueField="dbId" ondrawcell="onDrawWithDbId" />
                    </td>
                    <td>氧化膜　：</td>
                    <td >
                        <input name="oxideFilm" class="mini-textbox" value="8" required="true"/>
                    </td>
                </tr>

                <tr>
                    <td>包装方式</td>
                    <td>
                        <input name="pack.dbId" required="true" property="editor" class="mini-combobox"   url="$packListUrl"
                               textField="name" valueField="dbId" ondrawcell="onDrawWithDbId"/>
                    </td>
                    <td>铝锭价格(元/吨)：</td>
                    <td >
                        <input id="priceSelector" required="true" class="mini-buttonedit" allowInput="false"  onbuttonclick="onLvdingPriceSlecte" name="alPrice" textName="alPrice"/>
                    </td>

                </tr>

                <tr>
                    <td>加工费(元)</td>
                    <td>
                        <input id="processingFee" required="true" name="processingFee" onvaluechanged="calculatePrice" onkeyup="calculatePrice" class="mini-spinner" minValue="0" maxValue="10000000" value="0" required="true"/>
                    </td>
                    <td>材料单价(元/kg)：</td>
                    <td >
                        <input id="m_price" name="m_price" class="mini-textbox" onvaluechanged="calculateProcessingFee" required="true"/>
                    </td>
                </tr>
                <tr>
                    <td>上机费(元)</td>
                    <td>
                        <input id="workFee" required="true" name="workFee"   class="mini-textbox"  value="0" required="true"/>
                    </td>
                    <td>开单时间</td>
                    <td>
                        <input id="orderDate" readonly=true  required="true" name="orderDate" format="yyyy-MM-dd"  class="mini-datepicker"  />
                    </td>
                </tr>
                <tr>
                    <td>是否含税：</td>
                    <td>
                        <input name="includeTax" required="true" class="mini-combobox" value="1"  data="[{id:0,text:'含税'}, {id:1, text: '不含税'}]"/>
                    </td>
                    <td>是否开票：</td>
                    <td>
                        <input name="bill" required="true" class="mini-combobox" value="1"  data="[{id:0,text:'开票'}, {id:1, text: '不开票'}]"/>
                    </td>
                </tr>
                <tr>
                    <td>订货日期</td>
                    <td >
                        <input id="registerDate"  required="true" name="registerDate" format="yyyy-MM-dd"  class="mini-datepicker"  />
                    </td>
                    <td>拟定发货日期：</td>
                    <td>
                        <input id="preSendDate" required="true" ondrawdate="onDrawDate" name="preSendDate" format="yyyy-MM-dd"  class="mini-datepicker"  />
                    </td>
                </tr>

            </table>
        </div>
        <div title="备注">
            <input width="100%" height="100%" emptyText="备注信息" id="mcomment" name="mcomment" class="mini-textarea" />
        </div>
    </div>
    <fieldset id="fd2" >
        <legend><span> 订单明细</span></legend>
        <div class="fieldset-body">
            <div style="width:100%;">
                <div class="mini-toolbar" style="border-bottom:0;padding:0px;">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:100%;">
                                <a class="mini-button" iconCls="icon-add" onclick="addRow()" plain="true">增加</a>
                                <a class="mini-button" iconCls="icon-remove" onclick="removeRow()" plain="true">删除</a>
                            </td>

                        </tr>
                    </table>
                </div>
            </div>

    <div id="datagrid1" class="mini-datagrid" style="width:100%;height:100px;"
         idField="dbId" url="$loadOrderDeatilURL"  pageSize="10" showFooter="false"
         allowCellEdit="true" allowCellSelect="true" multiSelect="true"
         >
        <div property="columns">
            <div type="checkcolumn"></div>
            <div field="setSize" name="setSize" >规格尺寸(mm)
                <input property="editor" onvaluechanged="onGenderChanged(e,'setSize')" class="mini-spinner" minValue="0" maxValue="9999999" value="0" style="width:100%;"/>
            </div>
            <div field="orderQuantity" name="orderQuantity"  >订货数量（条）
                <input property="editor" onvaluechanged="onGenderChanged(e,'orderQuantity')"  class="mini-spinner" minValue="1" maxValue="99999999" value="1"  style="width:100%;"/>
            </div>
            <div field="orderWeight" name="orderWeight" >订货重量（千克）
                <input property="editor" onvaluechanged="onGenderChanged(e,'orderWeight')" class="mini-textbox"  style="width:100%;"/>
            </div>
            <div field="orderTotalMeter" name="orderTotalMeter" >总米数(米)
                <input  class="mini-textbox"  style="width:100%;"/>
            </div>
        </div>
    </div>
    </div>
    </fieldset>
    <div style="text-align:center;padding:10px;">
        <a class="mini-button" onclick="onOk" style="width:60px;margin-right:20px;">确定</a>
        <a class="mini-button" onclick="onCancel" style="width:60px;">取消</a>
    </div>

</form>


</body>

<script type="text/javascript">
    var operateName;
    mini.parse();
    var preSendDate = mini.get("preSendDate");
    preSendDate.setValue(new Date());
    var registerDate = mini.get("registerDate");
    registerDate.setValue(new Date());
    var orderDate = mini.get("orderDate");
    orderDate.setValue(new Date());
    var path1 = mini.get("path1");
    var path2 = mini.get("path2");
    var grid = mini.get("datagrid1");
    var agentSelected = mini.get("agentSelected");
    grid.load();

    var originalData;
    var form = new mini.Form("form1");

    function copyLastOrder() {
        var schemeId = mini.get("schemeSelector").getValue();
        var clientId = mini.get("clientSelector").getValue();
        if(schemeId!=""&&clientId!="")
            $.ajax({
                url: "$getLastOrderFormUrl",
                data: { schemeId: schemeId,clientId:clientId },
                success: function (order) {
                    if(order=="") return;
                    if (confirm("复制上次的记录？")) {
//                    grid.load({ orderId:order.dbId });
                    //复制属性是保持dbId和code不变
                    order.dbId=form.getData().dbId;
                    order.code=form.getData().code;
                    order.orderDate=form.getData().orderDate;
                    order.alPrice = form.getData().alPrice;
                    order.registerDate = form.getData().registerDate;
                    form.setData(order);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                }
            });
    }


    //重量=条数*定尺*米重
    //条数=重量/(定尺*米重)
    function onGenderChanged(e,field) {
        var combo = e.sender;
        var row = grid.getEditorOwnerRow(combo);
        var kpm = mini.get("kpm").getValue();
        var setSize = grid.getCellEditor("setSize", row).getValue();
        var orderQuantity = grid.getCellEditor("orderQuantity", row).getValue();
        var orderWeight = grid.getCellEditor("orderWeight", row).getValue();
        if(field=='setSize'){
            row.orderWeight=row.orderQuantity*((setSize/1000.0)*kpm)/1000;
            row.orderTotalMeter=(row.orderQuantity*setSize)/1000.0;
        }else if(field=='orderQuantity'){
            row.orderWeight=orderQuantity*((row.setSize/1000.0)*kpm)/1000;
            row.orderTotalMeter=(orderQuantity*row.setSize)/1000.0;
        }else if(field=='orderWeight'){
            row.orderQuantity=parseInt(orderWeight*1000/((row.setSize/1000.0)*kpm));
            row.orderTotalMeter=(row.orderQuantity*row.setSize)/1000.0;
        }else{}
        grid.doUpdate();
    }

    function onSchemeSlecte(e){
        mini.open({
            url: "$schemeSelectedUrl",
            title: "选择列表",
            width: 800,
            height: 400,
            ondestroy: function (action) {
                //if (action == "close") return false;
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var scheme = iframe.contentWindow.GetData();
                    scheme = mini.clone(scheme);    //必须
                    if (scheme) {
                        mini.get("schemeSelector").setValue(scheme.dbId);
                        mini.get("schemeSelector").setText(scheme.name);
                        copyLastOrder();
                    }
                }

            }
        });
    }

    function onClientSlecte(e){
        mini.open({
            url: "$clientSelectedUrl",
            title: "选择客户",
            width: 800,
            height: 500,
            ondestroy: function (action) {
                //if (action == "close") return false;
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var client = iframe.contentWindow.GetData();
                    client = mini.clone(client);    //必须
                    if (client) {
                        mini.get("clientSelector").setValue(client.dbId);
                        mini.get("clientSelector").setText(client.name);
                        mini.get("agentName").setValue(client.agent.name);
                        copyLastOrder();
                        $.ajax({
                            url: "${generateCodeUrl}?clientId=" + client.dbId,
                            cache: false,
                            success: function (code) {
                                mini.get("code").setValue(code);
                            }
                        });
                    }
                }

            }
        });
    }

    function onCitySlecte(e){
        mini.open({
            url: "$citySelectedUrl",
            title: "选择城市",
            width: 400,
            height: 600,
            ondestroy: function (action) {
                //if (action == "close") return false;
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var city = iframe.contentWindow.GetData();
                    city = mini.clone(city);    //必须
                    if (city) {
                        mini.get("citySelector").setValue(city.dbId);
                        mini.get("citySelector").setText(city.name);
                    }
                }

            }
        });
    }

    function onLvdingPriceSlecte(e){
        mini.open({
            url: "$lvdingPriceSelectedUrl",
            title: "选择铝锭价格",
            width: 500,
            height: 600,
            ondestroy: function (action) {
                //if (action == "close") return false;
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var price = iframe.contentWindow.GetData();
                    price = mini.clone(price);    //必须
                    if (price) {
                        mini.get("priceSelector").setValue(price.name);
                        mini.get("priceSelector").setText(price.name);
                        calculatePrice();
                    }
                }

            }
        });
    }

    function onPath1Changed(){
        var txt = path1.getValue();
        var tempData;
        if(txt == "时效"){
            tempData=[{text:'打包'}, {text: '喷涂'}, { text: '电泳'}, { text: '氧化'}];
        }else if(txt != "打包"){
            tempData = [{text:'打包'}];
        }else{
            tempData = [];
        }
        path2.setData(tempData);
        path2.select(0);
    }

    function  calculatePrice(){
        var alPrice = parseFloat(mini.get("priceSelector").getValue());
        var processingFee = parseInt(mini.get("processingFee").getValue());
        var m_price = (alPrice+processingFee)/1000;
        mini.get("m_price").setValue(m_price);
    }

    function calculateProcessingFee(){
        var alPrice = mini.get("priceSelector").getValue();
        var mPrice = mini.get("m_price").getValue();
        var processingFee=mPrice*1000-alPrice;
        mini.get("processingFee").setValue(processingFee);
    }

    function saveData() {
        form.validate();
        if (form.isValid() == false) return;
        var o = form.getData();
        var detail = grid.getChanges();
        var dataAfterEdit = $.extend({},originalData,o);
        if(dataAfterEdit.city.dbId==""){
            delete dataAfterEdit.city;
        }
        dataAfterEdit.preSendDate=preSendDate.getText()==""?null:preSendDate.getText();
        dataAfterEdit.registerDate=registerDate.getText()==""?null:registerDate.getText();
        var operate="saveOrder";
        if(operateName=="add")
            operate="saveOrder";
        else if(operateName=="edit")
            operate="updateOrder";
        else if(operateName=="view"){
            CloseWindow("cancel");
            return
        }else
            operate="saveOrder";

        $.ajax({
            url: "${addUpdateOrderUrl}",
            type:'post',
            data: {
                orderFormData:mini.encode(dataAfterEdit),
                orderDetailData:mini.encode(detail),
                operate:operate
            },
            cache: false,
            success: function (text) {
                CloseWindow("save");
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            }
        });
    }
    function onDrawDate(e) {
        var date = e.date;
        var d = new Date();

        if (date.getTime() < d.getTime()) {
            e.allowSelect = false;
        }
    }
    var originalOrder;
    ////////////////////
    //标准方法接口定义
    function setData(operate,data) {
        operateName = operate;

        if (operate == "edit"||operate == "view") {
            //跨页面传递的数据对象，克隆后才可以安全使用
            originalData = mini.clone(data);
            $.ajax({
                url: "${getOrderUrl}?orderId=" + originalData.dbId,
                cache: false,
                success: function (order) {
                    originalOrder = order;
                    form.setData(order);
                    var t = mini.get("agentSelected");
                    t.setValue(order.agent.dbId);
                    t.setText(order.agent.name);

                    form.setChanged(false);
                }
            });
            if (operate == "view"){
                var fields = form.getFields();
                for (var i = 0, l = fields.length; i < l; i++) {
                    var c = fields[i];
                    if (c.setReadOnly) c.setReadOnly(true);     //只读
                    if (c.setIsValid) c.setIsValid(true);      //去除错误提示
                }
            }
            grid.load({ orderId:originalData.dbId });
        }else{
            $.ajax({
                url: "${findLastLvDingUrl}",
                cache: false,
                success: function (data) {
                    mini.get("priceSelector").setValue(data.name);
                    mini.get("priceSelector").setText(data.name);
                    calculatePrice();
                }
            });
        }
    }

    function addRow() {
        var newRow = { setSize: 1,orderQuantity:1,orderWeight:1,orderTotalMeter:0.001 };
        grid.addRow(newRow, 0);
        grid.validateRow(newRow);   //加入新行，马上验证新行
    }
    function removeRow() {
        var rows = grid.getSelecteds();
        if (rows.length > 0) {
            grid.removeRows(rows, true);
        }
    }

    function getData() {
        var o = form.getData();
        return o;
    }
    function CloseWindow(action) {
        if (action == "close" && form.isChanged()) {
            if (confirm("数据被修改了，是否先保存？")) {
                return false;
            }
        }
        if (window.CloseOwnerWindow) return window.CloseOwnerWindow(action);
        else window.close();
    }

    function onOk(e) {
        saveData();
    }
    function onCancel(e) {
        CloseWindow("cancel");
    }
</script>
